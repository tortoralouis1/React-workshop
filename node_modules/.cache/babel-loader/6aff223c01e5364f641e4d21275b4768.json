{"ast":null,"code":"var _jsxFileName = \"/Users/louistortora/Documents/React2/React-workshop/src/private/SelectedImage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Checkmark from './Checkmark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imgStyle = {\n  height: '100%',\n  transition: 'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s'\n};\nconst selectedImgStyle = {\n  transform: 'translateZ(0px) scale3d(0.9, 0.9, 1)',\n  transition: 'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s'\n};\nconst cont = {\n  backgroundColor: '#eee',\n  cursor: 'pointer',\n  overflow: 'hidden',\n  position: 'relative'\n};\n\nconst SelectedImage = _ref => {\n  _s();\n\n  let {\n    photo,\n    margin,\n    direction,\n    top,\n    left,\n    selected,\n    onClick\n  } = _ref;\n  const [isSelected, setIsSelected] = useState(selected); //calculate x,y scale\n\n  const sx = (100 - 30 / photo.width * 100) / 100;\n  const sy = (100 - 30 / photo.height * 100) / 100;\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\n\n  if (direction === 'column') {\n    cont.position = 'absolute';\n    cont.left = left;\n    cont.top = top;\n  }\n\n  const handleOnClick = e => {\n    setIsSelected(!isSelected);\n    onClick(photo);\n  };\n\n  useEffect(() => {\n    setIsSelected(selected);\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin,\n      height: photo.height,\n      width: photo.width,\n      ...cont\n    },\n    className: !isSelected ? 'not-selected' : '',\n    children: [/*#__PURE__*/_jsxDEV(Checkmark, {\n      selected: isSelected ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: isSelected ? { ...imgStyle,\n        ...selectedImgStyle\n      } : { ...imgStyle\n      },\n      ...photo,\n      onClick: handleOnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `.not-selected:hover{outline:2px solid #06befa}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectedImage, \"iLiOpJMfCpQ+7rvCH5Lq2zEwbRs=\");\n\n_c = SelectedImage;\nexport default SelectedImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedImage\");","map":{"version":3,"sources":["/Users/louistortora/Documents/React2/React-workshop/src/private/SelectedImage.tsx"],"names":["React","useState","useEffect","Checkmark","imgStyle","height","transition","selectedImgStyle","transform","cont","backgroundColor","cursor","overflow","position","SelectedImage","photo","margin","direction","top","left","selected","onClick","isSelected","setIsSelected","sx","width","sy","handleOnClick","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAIA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE,MADK;AAEbC,EAAAA,UAAU,EACN;AAHS,CAAjB;AAKA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,SAAS,EAAE,sCADU;AAErBF,EAAAA,UAAU,EACN;AAHiB,CAAzB;AAaA,MAAMG,IAAU,GAAG;AACfC,EAAAA,eAAe,EAAE,MADF;AAEfC,EAAAA,MAAM,EAAE,SAFO;AAGfC,EAAAA,QAAQ,EAAE,QAHK;AAIfC,EAAAA,QAAQ,EAAE;AAJK,CAAnB;;AAkBA,MAAMC,aAAa,GAAG,QAQI;AAAA;;AAAA,MARH;AACnBC,IAAAA,KADmB;AAEnBC,IAAAA,MAFmB;AAGnBC,IAAAA,SAHmB;AAInBC,IAAAA,GAJmB;AAKnBC,IAAAA,IALmB;AAMnBC,IAAAA,QANmB;AAOnBC,IAAAA;AAPmB,GAQG;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAACmB,QAAD,CAA5C,CADsB,CAEtB;;AACA,QAAMI,EAAE,GAAG,CAAC,MAAO,KAAKT,KAAK,CAACU,KAAZ,GAAqB,GAA5B,IAAmC,GAA9C;AACA,QAAMC,EAAE,GAAG,CAAC,MAAO,KAAKX,KAAK,CAACV,MAAZ,GAAsB,GAA7B,IAAoC,GAA/C;AACAE,EAAAA,gBAAgB,CAACC,SAAjB,GAA8B,2BAA0BgB,EAAG,KAAIE,EAAG,MAAlE;;AAEA,MAAIT,SAAS,KAAK,QAAlB,EAA4B;AACxBR,IAAAA,IAAI,CAACI,QAAL,GAAgB,UAAhB;AACAJ,IAAAA,IAAI,CAACU,IAAL,GAAYA,IAAZ;AACAV,IAAAA,IAAI,CAACS,GAAL,GAAWA,GAAX;AACH;;AAED,QAAMS,aAAa,GACfC,CADkB,IAEjB;AACDL,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAD,IAAAA,OAAO,CAACN,KAAD,CAAP;AACH,GALD;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,aAAa,CAACH,QAAD,CAAb;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACI;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,MADG;AAEHX,MAAAA,MAAM,EAAEU,KAAK,CAACV,MAFX;AAGHoB,MAAAA,KAAK,EAAEV,KAAK,CAACU,KAHV;AAIH,SAAGhB;AAJA,KADX;AAOI,IAAA,SAAS,EAAE,CAACa,UAAD,GAAc,cAAd,GAA+B,EAP9C;AAAA,4BASI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEA,UAAU,GAAG,IAAH,GAAU;AAAzC;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AACI,MAAA,KAAK,EACDA,UAAU,GACJ,EAAE,GAAGlB,QAAL;AAAe,WAAGG;AAAlB,OADI,GAEJ,EAAE,GAAGH;AAAL,OAJd;AAAA,SAMQW,KANR;AAOI,MAAA,OAAO,EAAEY;AAPb;AAAA;AAAA;AAAA;AAAA,YAVJ,eAmBI;AAAA,gBAAS;AAAT;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvDD;;GAAMb,a;;KAAAA,a;AAyDN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { RenderImageProps } from 'react-photo-gallery'\nimport CSS from 'csstype'\nimport { Picker_Picture } from '../api/types'\nimport Checkmark from './Checkmark'\n\nconst imgStyle = {\n    height: '100%',\n    transition:\n        'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s',\n}\nconst selectedImgStyle = {\n    transform: 'translateZ(0px) scale3d(0.9, 0.9, 1)',\n    transition:\n        'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s',\n}\ntype Cont = {\n    left?: number | undefined\n    top?: number | undefined\n    backgroundColor: CSS.Properties['backgroundColor']\n    cursor: CSS.Properties['cursor']\n    overflow: CSS.Properties['overflow']\n    position: CSS.Properties['position']\n}\nconst cont: Cont = {\n    backgroundColor: '#eee',\n    cursor: 'pointer',\n    overflow: 'hidden',\n    position: 'relative',\n}\n\ntype SelectedImageProps = {\n    index: number\n    margin: CSS.Properties['margin']\n    direction?: RenderImageProps['direction']\n    selected: boolean\n    photo: Picker_Picture\n    top: RenderImageProps['top']\n    left: RenderImageProps['left']\n    onClick: (picture: Picker_Picture) => void\n}\n\nconst SelectedImage = ({\n    photo,\n    margin,\n    direction,\n    top,\n    left,\n    selected,\n    onClick,\n}: SelectedImageProps) => {\n    const [isSelected, setIsSelected] = useState(selected)\n    //calculate x,y scale\n    const sx = (100 - (30 / photo.width) * 100) / 100\n    const sy = (100 - (30 / photo.height) * 100) / 100\n    selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`\n\n    if (direction === 'column') {\n        cont.position = 'absolute'\n        cont.left = left\n        cont.top = top\n    }\n\n    const handleOnClick = (\n        e: React.MouseEvent<HTMLImageElement, MouseEvent>\n    ) => {\n        setIsSelected(!isSelected)\n        onClick(photo)\n    }\n\n    useEffect(() => {\n        setIsSelected(selected)\n    }, [selected])\n\n    return (\n        <div\n            style={{\n                margin,\n                height: photo.height,\n                width: photo.width,\n                ...cont,\n            }}\n            className={!isSelected ? 'not-selected' : ''}\n        >\n            <Checkmark selected={isSelected ? true : false} />\n            <img\n                style={\n                    isSelected\n                        ? { ...imgStyle, ...selectedImgStyle }\n                        : { ...imgStyle }\n                }\n                {...photo}\n                onClick={handleOnClick}\n            />\n            <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\n        </div>\n    )\n}\n\nexport default SelectedImage\n"]},"metadata":{},"sourceType":"module"}